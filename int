-- 0x10
    bios 提供的视频服务中断，用于在实模式下（real mode）操作显卡和文本输出功能（只能在实模式 real mode 使用）。
    ah:
        --  0x00    设置视频模式，具体模式由 al 指定。
            al:
                --  0x00    文字模式，80x25 字符，单色（白/黑）。
                --  0x03    文字模式，80x25 字符，彩色，16 种颜色。
                --  0x13    图形模式，320x200 像素，256 色。
                --  0x0F    高分辨率文本模式，80x50 字符，单色（白/黑）。
        --  0x0e    显示一个字符（TTY 输出），由 al 指定要显示的字符。
            bh:
                --  用于指定在第 bh 个页面输出字符。
            bl:
                -- 0x01     蓝色字符，黑色背景。
                -- 0x07     白色字符，黑色背景。

-- 0x13
    用于磁盘操作的 BIOS 中断。它提供了对软盘、硬盘、CD-ROM 等磁盘设备的低级访问方式。
    ah:
        -- 0x02     读取扇区。
            dl:
                -- 0x00     驱动器编号，软盘编号 0x00。
                -- 0x80     硬盘编号从 0x80 开始。
            dh:
                --  磁头号，表示物理磁头的位置。
            ch:
                --  待读取的柱面编号。
            cl:
                --  待读取的扇区编号。
            al:
                --  读取扇区的个数。
            es:bx
                --  指向数据缓冲区的地址，数据写到这里。

-- 0x15
    中断 0x15 是一个 BIOS 中断调用，广泛用于实模式下与 BIOS 交互，用以执行各种系统级功能。
        eax:
            --  0xe820  让 BIOS 进行内存检测
                ecx:    将 ECX 寄存器的值设置为 20，这是传递给 BIOS 的缓冲区大小，指明了内存映射记录的大小。
                edx:    将 EDX 寄存器的值设置为 'SMAP' 的 ASCII 码（0x534D4150）。
                        这是一个签名，操作系统通过这个签名来验证 BIOS 返回的信息是否有效。
                di:     es:di 指向一块内存，BIOS每次检测完都会将 20（ecx=20） 字节的信息写到 es:di 指向的内存位置。
                        所以每检测完一次，都要移动地址，即 di += 20
                ebx:    我们在调用前将 ebx=0，但 BIOS 将下一次调用所需的 continuation value 返回在 EBX 中，
                        用于连续获取所有内存区域信息。
                        在检测的时候，ebx 会被 bios 修改为连续值用于下次检测，ebx 不为 0 就要继续检测

                执行中断 15H 调用。它传递了前面设置的参数（EAX=0xE820, ECX=20, EDX='SMAP'），请求 BIOS 返回系统的内存映射。
                这个中断调用会填充先前准备好的内存区域（通过 ES:DI 指向的缓冲区）来返回内存映射信息，
                同时更新 EAX 寄存器为 'SMAP'，以确认操作成功，
                并且将下一次调用所需的 continuation value 返回在 EBX 中，用于连续获取所有内存区域信息。

-- 0x19
    开机后 bios 会调用 0x19 中断，将 boot.asm 所在的位置即磁盘第一个扇区，共 512B 加载到内存 0x7C00 的位置。

-- 0x20
    时钟中断。

-- 0x21
    键盘中断。

-- 0x80
    系统调用。